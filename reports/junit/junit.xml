<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="4" failures="0" skipped="0" tests="4" time="7.562" timestamp="2024-12-19T10:56:03.381683+05:30" hostname="LAP-55355"><testcase classname="" name="tests.controllers_tests.test_asset_handlers" time="0.000"><error message="collection failure">ImportError while importing test module 'C:\Users\pjalodiya\PycharmProjects\Asset-Management\tests\controllers_tests\test_asset_handlers.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
..\.venv\Lib\site-packages\pydantic\networks.py:895: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
C:\Program Files\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\controllers_tests\test_asset_handlers.py:12: in &lt;module&gt;
    from src.app.controllers.asset.handlers import AssetHandler
src\app\controllers\asset\handlers.py:3: in &lt;module&gt;
    from src.app.models.request_objects import AssetRequest, AssignAssetRequest, UnassignAssetRequest
src\app\models\request_objects.py:5: in &lt;module&gt;
    class LoginRequest(BaseModel):
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:226: in __new__
    complete_model_class(
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:658: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
..\.venv\Lib\site-packages\pydantic\main.py:702: in __get_pydantic_core_schema__
    return handler(source)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:610: in generate_schema
    schema = self._generate_schema_inner(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:879: in _generate_schema_inner
    return self._model_schema(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:691: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1071: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1263: in _common_field_schema
    schema = self._apply_annotations(
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2056: in _apply_annotations
    schema = get_inner_schema(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2035: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:759: in _generate_schema_from_property
    schema = get_schema(
..\.venv\Lib\site-packages\pydantic\networks.py:935: in __get_pydantic_core_schema__
    import_email_validator()
..\.venv\Lib\site-packages\pydantic\networks.py:897: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase><testcase classname="" name="tests.controllers_tests.test_asset_issue_handlers" time="0.000"><error message="collection failure">ImportError while importing test module 'C:\Users\pjalodiya\PycharmProjects\Asset-Management\tests\controllers_tests\test_asset_issue_handlers.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
..\.venv\Lib\site-packages\pydantic\networks.py:895: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
C:\Program Files\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\controllers_tests\test_asset_issue_handlers.py:11: in &lt;module&gt;
    from src.app.controllers.asset_issue.handlers import IssueHandler
src\app\controllers\asset_issue\handlers.py:3: in &lt;module&gt;
    from src.app.models.request_objects import ReportIssueRequest
src\app\models\request_objects.py:5: in &lt;module&gt;
    class LoginRequest(BaseModel):
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:226: in __new__
    complete_model_class(
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:658: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
..\.venv\Lib\site-packages\pydantic\main.py:702: in __get_pydantic_core_schema__
    return handler(source)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:610: in generate_schema
    schema = self._generate_schema_inner(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:879: in _generate_schema_inner
    return self._model_schema(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:691: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1071: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1263: in _common_field_schema
    schema = self._apply_annotations(
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2056: in _apply_annotations
    schema = get_inner_schema(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2035: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:759: in _generate_schema_from_property
    schema = get_schema(
..\.venv\Lib\site-packages\pydantic\networks.py:935: in __get_pydantic_core_schema__
    import_email_validator()
..\.venv\Lib\site-packages\pydantic\networks.py:897: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase><testcase classname="" name="tests.controllers_tests.test_main" time="0.000"><error message="collection failure">ImportError while importing test module 'C:\Users\pjalodiya\PycharmProjects\Asset-Management\tests\controllers_tests\test_main.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
..\.venv\Lib\site-packages\pydantic\networks.py:895: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
C:\Program Files\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\controllers_tests\test_main.py:3: in &lt;module&gt;
    from src.app.controllers.main import create_app
src\app\controllers\main.py:4: in &lt;module&gt;
    from src.app.controllers.asset.routes import create_asset_routes
src\app\controllers\asset\routes.py:4: in &lt;module&gt;
    from src.app.controllers.asset.handlers import AssetHandler
src\app\controllers\asset\handlers.py:3: in &lt;module&gt;
    from src.app.models.request_objects import AssetRequest, AssignAssetRequest, UnassignAssetRequest
src\app\models\request_objects.py:5: in &lt;module&gt;
    class LoginRequest(BaseModel):
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:226: in __new__
    complete_model_class(
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:658: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
..\.venv\Lib\site-packages\pydantic\main.py:702: in __get_pydantic_core_schema__
    return handler(source)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:610: in generate_schema
    schema = self._generate_schema_inner(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:879: in _generate_schema_inner
    return self._model_schema(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:691: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1071: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1263: in _common_field_schema
    schema = self._apply_annotations(
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2056: in _apply_annotations
    schema = get_inner_schema(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2035: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:759: in _generate_schema_from_property
    schema = get_schema(
..\.venv\Lib\site-packages\pydantic\networks.py:935: in __get_pydantic_core_schema__
    import_email_validator()
..\.venv\Lib\site-packages\pydantic\networks.py:897: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase><testcase classname="" name="tests.controllers_tests.test_user_handlers" time="0.000"><error message="collection failure">ImportError while importing test module 'C:\Users\pjalodiya\PycharmProjects\Asset-Management\tests\controllers_tests\test_user_handlers.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
..\.venv\Lib\site-packages\pydantic\networks.py:895: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
C:\Program Files\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\controllers_tests\test_user_handlers.py:22: in &lt;module&gt;
    from src.app.controllers.users.handlers import UserHandler
src\app\controllers\users\handlers.py:3: in &lt;module&gt;
    from src.app.models.request_objects import SignupRequest, LoginRequest
src\app\models\request_objects.py:5: in &lt;module&gt;
    class LoginRequest(BaseModel):
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:226: in __new__
    complete_model_class(
..\.venv\Lib\site-packages\pydantic\_internal\_model_construction.py:658: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
..\.venv\Lib\site-packages\pydantic\main.py:702: in __get_pydantic_core_schema__
    return handler(source)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:610: in generate_schema
    schema = self._generate_schema_inner(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:879: in _generate_schema_inner
    return self._model_schema(obj)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:691: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1071: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1263: in _common_field_schema
    schema = self._apply_annotations(
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2056: in _apply_annotations
    schema = get_inner_schema(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_schema_generation_shared.py:84: in __call__
    schema = self._handler(source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2035: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
..\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:759: in _generate_schema_from_property
    schema = get_schema(
..\.venv\Lib\site-packages\pydantic\networks.py:935: in __get_pydantic_core_schema__
    import_email_validator()
..\.venv\Lib\site-packages\pydantic\networks.py:897: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase></testsuite></testsuites>